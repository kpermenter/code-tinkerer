{"version":3,"sources":["plugins/fetchPlugin.ts","components/Header/Header.tsx","components/CodeEditor/Editor.tsx","index.tsx","plugins/unpkgPathPlugin.ts"],"names":["fileCache","localforage","createInstance","name","fetchPlugin","inputCode","setup","build","onLoad","filter","loader","contents","args","getItem","path","cachedResult","axios","get","data","request","escaped","replace","result","resolveDir","URL","responseURL","pathname","setItem","Header","className","style","color","Editor","onChange","initialValue","editor","useRef","marginRight","onClick","unformatted","current","getModel","getValue","formatted","prettier","format","parser","plugins","useTabs","semi","singleQuote","setValue","editorDidMount","monacoEditor","onDidChangeModelContent","updateOptions","tabSize","Highlighter","window","monaco","codeShift","highLightOnDidChangeModelContent","undefined","value","theme","language","height","options","wordWrap","minimap","enabled","showUnused","folding","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout","App","serviceRef","iframe","useState","input","setInput","startService","esbuild","worker","wasmURL","useEffect","srcdoc","html","entryPoints","bundle","write","onResolve","namespace","href","define","global","contentWindow","postMessage","outputFiles","text","marginLeft","title","ref","sandbox","srcDoc","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.9d09832a.chunk.js","sourcesContent":["import * as esbuild from 'esbuild-wasm';\nimport axios from 'axios';\nimport localforage from 'localforage';\n\nconst fileCache = localforage.createInstance({\n  name: \"fileCache\"\n});\n\nexport const fetchPlugin = (inputCode: string) => {\n  return {\n    name: 'fetch-plugin',\n    setup(build: esbuild.PluginBuild) {\n       build.onLoad( {filter: /(^index\\.js$)/}, () => {\n        return {\n          loader: 'jsx',\n          contents: inputCode\n        };\n       });\n\n       build.onLoad({filter: /.*/},async (args: any) => {\n          const cachedResult = await fileCache.getItem<esbuild.OnLoadResult>(args.path);\n           if(cachedResult){\n             return cachedResult;\n           }\n       });\n\n       build.onLoad({filter: /.css$/},async(args: any) => {\n         const { data, request } = await axios.get(args.path);\n         \n         const escaped = data.replace(/\\n/g, '')\n            .replace(/\"/g, '\\\\\"')\n            .replace(/'/g, \"\\\\'\")\n         const contents = `\n            const style = document.createElement('style');\n            style.innerText = '${escaped}';\n            document.head.appendChild(style);\n          `;\n\n          const result: esbuild.OnLoadResult = {\n            loader: \"jsx\",\n            contents,\n            resolveDir: new URL('./', request.responseURL).pathname\n          };\n          await fileCache.setItem(args.path, result);\n         \n          return result;\n       });\n      \n       build.onLoad({ filter: /.*/ }, async (args: any) => {\n          const { data, request } = await axios.get(args.path);\n\n          const result: esbuild.OnLoadResult = {\n            loader: \"jsx\",\n            contents: data,\n            resolveDir: new URL('./', request.responseURL).pathname\n          };\n          await fileCache.setItem(args.path, result);\n         \n          return result;\n      });\n    }\n  }\n}\n","import 'bulmaswatch/superhero/bulmaswatch.min.css';\n\nexport const Header: React.FC = () => {\n  return (\n    <div className='hero'>\n      <div className='hero-body'>\n        <p className='title'>\n          {'<> Code Tinkerer </>'}\n        </p>\n        <p className='subtitle' style={{ color: '#f14668' }}>\n          Let's build something awesome.\n        </p>\n      </div>\n    </div>\n  );\n}\n","import './editor.css';\nimport './syntax.css';\nimport CodeEditor, { EditorDidMount } from '@monaco-editor/react'\nimport React, { useRef } from 'react'\nimport { Header } from '../Header/Header';\nimport prettier from 'prettier';\nimport parser from 'prettier/parser-babel';\nimport codeShift from 'jscodeshift';\nimport Highlighter from 'monaco-jsx-highlighter';\n\ninterface CodeEditorProps {\n  initialValue: string;\n  onChange(value: string): void\n}\n\nexport const Editor: React.FC<CodeEditorProps> = ({ onChange, initialValue }) => {\n  const editor = useRef<any>();\n  const onEditorDidMount: EditorDidMount = (getValue, monacoEditor) => {\n    editor.current = monacoEditor;\n    monacoEditor.onDidChangeModelContent(() => {\n      onChange(getValue());\n    });\n\n    monacoEditor.getModel()?.updateOptions({ tabSize: 2 });\n    const highlighter = new Highlighter(\n      // @ts-ignore\n      window.monaco,\n      codeShift,\n      monacoEditor\n    );\n\n    highlighter.highLightOnDidChangeModelContent(\n      () => { },\n      () => { },\n      undefined,\n      () => { }\n    );\n  }\n\n  const onFormatClick = () => {\n    // get the current value from the editor\n    const unformatted = editor.current.getModel()?.getValue();\n\n    // format that value\n    const formatted = prettier.format(unformatted, {\n      parser: 'babel',\n      plugins: [parser],\n      useTabs: false,\n      semi: true,\n      singleQuote: true\n    }).replace(/\\n$/, '');\n\n    // set the formatted value to the editor\n    editor.current.setValue(formatted);\n  }\n\n  return (\n    <>\n      <Header />\n      <div className=\"editor-wrapper\">\n        <button\n          className=\"button button-format is-primary is-small\" style={{ marginRight: 10 }} onClick={onFormatClick}>Format</button>\n        <CodeEditor\n          editorDidMount={onEditorDidMount}\n          value={initialValue}\n          theme=\"dark\"\n          language=\"javascript\"\n          height=\"500px\"\n          options={{\n            wordWrap: 'on',\n            minimap: { enabled: false },\n            showUnused: false,\n            folding: false,\n            lineNumbersMinChars: 3,\n            fontSize: 16,\n            scrollBeyondLastLine: false,\n            automaticLayout: true\n          }}\n        />\n      </div>\n    </>\n  );\n}\n","import 'bulmaswatch/superhero/bulmaswatch.min.css';\nimport ReactDOM from 'react-dom';\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as esbuild from \"esbuild-wasm\";\nimport { unpkgPathPlugin } from './plugins/unpkgPathPlugin';\nimport { fetchPlugin } from './plugins/fetchPlugin';\nimport { Editor } from './components/CodeEditor/Editor';\n\nconst App: React.FC = () => {\n  const serviceRef = useRef<any>();\n  const iframe = useRef<any>();\n  const [input, setInput] = useState('');\n\n  const startService = async () => {\n    serviceRef.current = await esbuild.startService(\n      {\n        worker: true,\n        wasmURL: \"https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm\"\n      }\n    );\n  }\n\n  useEffect(() => {\n    startService();\n  }, []);\n\n  const onClick = async () => {\n    if (!serviceRef.current) {\n      return;\n    }\n\n    iframe.current.srcdoc = html;\n\n    const result = await serviceRef.current.build({\n      entryPoints: ['index.js'],\n      bundle: true,\n      write: false,\n      plugins: [\n        unpkgPathPlugin(),\n        fetchPlugin(input)\n      ],\n      define: {\n        \"process.env.NODE_ENV\": '\"production\"',\n        global: 'window'\n      }\n    })\n    iframe.current.contentWindow.postMessage(result.outputFiles[0].text, '*')\n  }\n\n  const html = `\n    <html>\n      <head></head>\n        <body>\n          <div id=\"root\"></div>\n          <script>\n            window.addEventListener('message', (event) => {\n            try {\n              eval(event.data);\n            } catch (err){\n                const root = document.querySelector(\"#root\");\n                root.innerHTML = '<div style = \"color: red;\" ><h4>RunTimeError:</h4>'+ err +'</div>';\n                console.error(err);\n              }\n            }, false);\n            </script>\n        </body>\n        </html>\n    `\n  return (\n    <div>\n      <div>\n        <Editor onChange={(value) => setInput(value)} initialValue=\"const build = 'feed me all the code 🍔';\" />\n      </div>\n      <button\n        className=\"button button-format is-primary is-small\" style={{ marginLeft: 10 }} onClick={onClick}>Submit</button>\n      <br />\n      <div>\n        <iframe title=\"preview\" ref={iframe} sandbox=\"allow-scripts\" srcDoc={html} />\n      </div>\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.querySelector(\"#root\"))\n","import * as esbuild from 'esbuild-wasm';\nexport const unpkgPathPlugin = () => {\n  return {\n    name: 'unpkg-path-plugin',\n    setup(build: esbuild.PluginBuild) {\n      build.onResolve({filter: /(^index\\.js$)/},(args: any) => {\n        return { path: args.path, namespace: 'a'}\n      });\n\n      build.onResolve({filter: /^\\.+\\//}, (args: any) => {\n        return {\n          namespace: 'a',\n          path: new URL(args.path, \"https://unpkg.com\" + args.resolveDir +  '/').href\n        }\n      });\n\n      build.onResolve({ filter: /.*/ }, async (args: any) => {\n        return {\n          namespace: 'a',\n          path: `https://unpkg.com/${args.path}`\n        }\n      });\n    },\n  };\n};\n"],"sourceRoot":""}